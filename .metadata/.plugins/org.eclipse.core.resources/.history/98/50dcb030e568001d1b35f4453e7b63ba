package com.keilacouto.provanivel2.service.impl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.keilacouto.provanivel2.exceptions.EmployeeNotFoundException;
import com.keilacouto.provanivel2.exceptions.ProdutoNotFoundException;
import com.keilacouto.provanivel2.model.Produto;
import com.keilacouto.provanivel2.repositories.ProdutoRepository;
import com.keilacouto.provanivel2.service.ProdutoService;

@Service
public class ProdutoServiceImpl implements ProdutoService {

	@Autowired
	private ProdutoRepository repository;

	@Override
	public Produto save(Produto entity) {
		return repository.save(entity);
	}

	@Override
	public List<Produto> findAll() {
		return repository.findAll();
	}

	@Override
	public Page<Produto> findAll(Pageable pageable) {
		return repository.findAll(pageable);
	}

	@Override
	public Produto findById(Long id) {
		Optional<Produto> entity = repository.findById(id);

		if (entity.isEmpty()) {
			throw new EmployeeNotFoundException("id-" + id);
		}
		
		return entity.get();

	}

	@Override
	public Produto update(Produto entity, Long id) {
		Optional<Produto> entityOptional = repository.findById(id);

		if (entityOptional.isEmpty()) {
			throw new ProdutoNotFoundException("id-" + id);
		}

		entity.setId(id);

		repository.save(entity);

		return entity;
	}

	@Override
	public void deleteById(Long id) {
		Optional<Produto> entity = repository.findById(id);

		if (entity.isEmpty()) {
			throw new ProdutoNotFoundException("id-" + id);
		}
		//select * from Pedido p 
		//inner join item_pedido i on i.id = p.pedido_id
		//inner join produto pd on pd.id = i.produto_id
		//where pd.id = id;
		repository.deleteById(id);
	}

}
